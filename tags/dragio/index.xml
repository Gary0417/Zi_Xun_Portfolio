<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dragio on Zi Xun</title>
    <link>https://gary0417.github.io/Zi_Xun_Portfolio/tags/dragio/</link>
    <description>Recent content in Dragio on Zi Xun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Jun 2023 08:58:08 -0400</lastBuildDate><atom:link href="https://gary0417.github.io/Zi_Xun_Portfolio/tags/dragio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project 5: Movie Recommendation Systems</title>
      <link>https://gary0417.github.io/Zi_Xun_Portfolio/post/project-5/</link>
      <pubDate>Tue, 13 Jun 2023 08:58:08 -0400</pubDate>
      
      <guid>https://gary0417.github.io/Zi_Xun_Portfolio/post/project-5/</guid>
      <description>üé• This project aims to build a movie recommendation system using content-based filtering and collaborative filtering techniques. The script uses the Sentence Transformers library for content-based filtering and the Surprise library for collaborative filtering.
üîó Link to GitHub Repository
How it works The script first cleans and preprocesses the movie metadata, keywords, and ratings data. It then builds a content-based filtering system by creating a &amp;ldquo;soup&amp;rdquo; of text that includes the genres, original language, overview, tagline, keywords, and production countries for each movie.</description>
    </item>
    
    <item>
      <title>Project 3: Tomato Disease Classification</title>
      <link>https://gary0417.github.io/Zi_Xun_Portfolio/post/project-3/</link>
      <pubDate>Fri, 07 Apr 2023 10:58:08 -0400</pubDate>
      
      <guid>https://gary0417.github.io/Zi_Xun_Portfolio/post/project-3/</guid>
      <description>üçÖ This project aims to classify diseases in tomato plants using a Convolutional Neural Network (CNN).
üåê A FastAPI web server is built to take in requests for images and return predicted diseases with confidence levels.
üîó Link to GitHub Repository
Model Building The image classification model is built using a CNN architecture implemented with TensorFlow&amp;rsquo;s Keras API. The model architecture consists of multiple Conv2D and MaxPooling2D layers, followed by Flatten and Dropout layers (with a dropout rate of 0.</description>
    </item>
    
  </channel>
</rss>
